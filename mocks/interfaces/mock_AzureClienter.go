// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	context "context"

	interfaces "github.com/bacalhau-project/andaime/pkg/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// MockAzureClienter is an autogenerated mock type for the AzureClienter type
type MockAzureClienter struct {
	mock.Mock
}

type MockAzureClienter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAzureClienter) EXPECT() *MockAzureClienter_Expecter {
	return &MockAzureClienter_Expecter{mock: &_m.Mock}
}

// ListResourceGroups provides a mock function with given fields: ctx
func (_m *MockAzureClienter) ListResourceGroups(ctx context.Context) ([]interfaces.ResourceGroup, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ListResourceGroups")
	}

	var r0 []interfaces.ResourceGroup
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]interfaces.ResourceGroup, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []interfaces.ResourceGroup); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interfaces.ResourceGroup)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAzureClienter_ListResourceGroups_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListResourceGroups'
type MockAzureClienter_ListResourceGroups_Call struct {
	*mock.Call
}

// ListResourceGroups is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockAzureClienter_Expecter) ListResourceGroups(ctx interface{}) *MockAzureClienter_ListResourceGroups_Call {
	return &MockAzureClienter_ListResourceGroups_Call{Call: _e.mock.On("ListResourceGroups", ctx)}
}

func (_c *MockAzureClienter_ListResourceGroups_Call) Run(run func(ctx context.Context)) *MockAzureClienter_ListResourceGroups_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockAzureClienter_ListResourceGroups_Call) Return(_a0 []interfaces.ResourceGroup, _a1 error) *MockAzureClienter_ListResourceGroups_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAzureClienter_ListResourceGroups_Call) RunAndReturn(run func(context.Context) ([]interfaces.ResourceGroup, error)) *MockAzureClienter_ListResourceGroups_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAzureClienter creates a new instance of MockAzureClienter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAzureClienter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAzureClienter {
	mock := &MockAzureClienter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

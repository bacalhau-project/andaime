#
# This is a Flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(5) for more information.
#
version = 1

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
python312Full = { pkg-path = "python312Full" }
pip = { pkg-path = "python312Packages.pip" }
go_1_23.pkg-path = "go_1_23"
golangci-lint.pkg-path = "golangci-lint"
just.pkg-path = "just"

# Set environment variables in the `[vars]` section. These variables may not
# reference one another, and are added to the environment without first
# expanding them. They are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment, and will not be invoked if Flox detects that the
# environment has previously been activated. Variables set by the script will
# be inherited by `[profile]` scripts defined below. Note that any stdout
# generated by the script will be redirected to stderr.
[hook]
on-activate = '''
  # Autogenerated by Flox

  # Set up Python environment
  python3 -m venv ./.venv
  source .venv/bin/activate
  pip install uv
  uv pip install -r requirements.txt

  # Set up Go environment
  export GOPATH="$HOME/go"
  export PATH="$GOPATH/bin:$PATH"

  # Install Go dependencies
  go mod download

  # End autogenerated by Flox
'''

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit environment variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and special care should be
# taken to ensure compatibility with all shells, after which exactly one of
# `profile.{bash,fish,tcsh,zsh}` is sourced by the corresponding shell.
[profile]
common = '''
alias uvf="uv pip freeze | uv pip compile - -o requirements.txt"
'''

# Additional options can be set in the `[options]` section. Refer to
# manifest.toml(5) for a list of available options.
[options]
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
# Uncomment to disable CUDA detection.
# cuda-detection = false
